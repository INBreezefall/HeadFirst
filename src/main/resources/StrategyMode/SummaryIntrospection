工具箱总结
    基础
        封装、抽象、继承、多态
    原则
        抽取隔离(封装)变化与不变代码
        多用组成，少用继承
        针对接口编程，不针对实现编程(只调用接口方法，不管实现)
    模式
        策略模式: 定义算法族，以接口作为约束，分别实现并可相互替换
        优点: 将算法的变化 独立于 算法的客户(主体类) / 将实现变化的函数独立于其所在抽象类

    注:
        设计模式不是代码，而是一种通用解决方案，是被发现的，而非发明的
        大多数模式都着眼于软件变化的主题，且都允许系统局部改变独立于其他部分
        设计模式令开发者之间最大程度简化经验交流信息，实现高价值密度信息交流