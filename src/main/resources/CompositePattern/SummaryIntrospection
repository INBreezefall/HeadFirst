名称: 组合模式 / 复合模式
实质: 复合模式将 多个对象 组合成树形结构，对象既可以是复合对象，也可以包含单个对象。
    复合对象 = 包含多个单个对象引用地址 child 的 唯一父节点 parent / 树形结构的非叶子节点 non-leaf node
    单个对象 = 树形结构的叶子节点 leaf node
意义: 复合模式能够让 调用者 以统一的方式来遍历 复合对象 & 单个对象 [这里就联系到 IteratorPattern]
实现: 通过继承相同的超类来忽略它们之间的差异 ※

权衡取舍折中
    一个类 一个责任 -- 单一职责原则 被 复合模式所破坏(一个抽象父类 具有 两种角色的函数)
    但这是值得的 -- 通过 单一职责原则 换取 透明性 Transparency
        透明性: Component 接口 同时具有 管理叶节点 & 非叶子节点的操作，这样 在调用者看来 叶子与非叶子节点没有任何区别
                透明 = 对于 不同类型 对象 的 调用接口是 统一的 没有任何区别的
                当然 不同类型 是具有一定约束条件的 -- 具有包含关系
                并且 换个一个角度来说，叶子节点 = 没有孩子的 非叶子节点，二者 存在 共性