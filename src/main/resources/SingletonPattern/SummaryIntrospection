工具箱
    原则
        高层抽象依赖高层抽象，而不依赖具体类
    模式
        单例模式:
        要点:
            1.所有的 工厂 都用来对 new 过程的封装
            2.简单工厂方法 = 简单代码重构 来 应对简单情景
            3.所有的 工厂 都是将 依赖具体类 改为 依赖高层抽象 达到松耦合
            4.工厂模式 将 实例化推迟到了 子类实现
            5.工厂 & 背后的依赖倒置原则 令 我们 针对抽象编程 而不是 针对具体类编程

避免违反 依赖倒置原则
    1.create 方法返回的变量不持有具体类的引用 而是抽象父类
    2.不要让类派生自具体类
    3.不要覆盖基类中已实现的方法

全局变量 & 单例模式
    1.单例模式 可以做到 延迟实例化
    2.单例模式 可以确保 在各种情况下的单个实例对象
    3.全局变量 由于其简单写法 会被滥用，通过指向许多小对象 造成命名空间污染
    4.单例模式 将 类功能 及 创建管理功能 合并在一个类中，由 类自身管理自身的实例